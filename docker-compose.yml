version: "3"
services:
  
  master:
    container_name: master
    image: rfondato/pyspark:3.3.1
    restart: always
    command: ["/opt/spark/sbin/start-master.sh"]
    environment:
      MASTER: spark://master:7077
      SPARK_NO_DAEMONIZE: 1
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    volumes:
      - ./code:/app
      - ./data:/data
      - ./model:/model

  worker1:
    container_name: worker1
    image: rfondato/pyspark:3.3.1
    restart: always
    command: ["/opt/spark/sbin/start-slave.sh", "spark://master:7077", "--memory", "2g", "--cores", "3"]
    environment:
      MASTER: spark://master:7077
      SPARK_NO_DAEMONIZE: 1
    depends_on:
      - master
    ports:
      - 4041:4040
      - "6066"
      - "7077"
      - 8081:8080
    volumes:
      - ./code:/app
      - ./data:/data
      - ./model:/model

  worker2:
    container_name: worker2
    image: rfondato/pyspark:3.3.1
    restart: always
    command: ["/opt/spark/sbin/start-slave.sh", "spark://master:7077", "--memory", "2g", "--cores", "3"]
    environment:
      MASTER: spark://master:7077
      SPARK_NO_DAEMONIZE: 1
    depends_on:
      - master
    ports:
      - 4042:4040
      - "6066"
      - "7077"
      - 8082:8080
    volumes:
      - ./code:/app
      - ./data:/data
      - ./model:/model

  jupyter:
    container_name: jupyter
    image: rfondato/jupyter
    restart: always
    environment:
      MASTER: spark://master:7077
    depends_on:
      - master
    ports:
      - "8888:8888"
    volumes:
      - ./notebook:/notebook
      - ./data:/data
      - ./code:/app

  postgres-airflow:
      container_name: postgres-airflow
      image: postgres:11
      restart: always
      volumes:
        - postgres-airflow-data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: airflow
        POSTGRES_USER: airflow
        POSTGRES_PASSWORD: airflow
      ports:
        - "5435:5432"

  airflow:
    container_name: airflow
    image: rfondato/airflow-spark
    restart: always
    depends_on:
      - postgres-airflow
    environment:
      EXECUTOR: Local
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 9090
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "Eff80poJxv6LE4432pDC6OmD6N449KCSuhUAMLXiq4U="
    ports:
      - "9090:9090"
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./code:/app
      - ./data:/data
      - ./model:/model
  
  mlflow:
    container_name: mlflow_server
    image: rfondato/mlflow
    restart: always
    build: ./mlflow
    ports:
        - "5000:5000"
    command: mlflow server --host 0.0.0.0
    volumes:
      - ./mlflow/mlruns:/mlruns
      - ./mlflow/mlartifacts:/mlartifacts

  kafka:
    container_name: kafka
    image: spotify/kafka
    restart: always
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092

volumes:
  postgres-airflow-data: